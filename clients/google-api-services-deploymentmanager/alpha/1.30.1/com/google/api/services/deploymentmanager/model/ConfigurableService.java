/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.deploymentmanager.model;

/**
 * BaseType that describes a service-backed Type.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Cloud Deployment Manager Alpha API. For a
 * detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ConfigurableService extends com.google.api.client.json.GenericJson {

  /**
   * Allows resource handling overrides for specific collections
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<CollectionOverride> collectionOverrides;

  static {
    // hack to force ProGuard to consider CollectionOverride used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(CollectionOverride.class);
  }

  /**
   * Credential used when interacting with this type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Credential credential;

  /**
   * Descriptor Url for the this type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String descriptorUrl;

  /**
   * Options to apply when handling any resources in this service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Options options;

  /**
   * Allows resource handling overrides for specific collections
   * @return value or {@code null} for none
   */
  public java.util.List<CollectionOverride> getCollectionOverrides() {
    return collectionOverrides;
  }

  /**
   * Allows resource handling overrides for specific collections
   * @param collectionOverrides collectionOverrides or {@code null} for none
   */
  public ConfigurableService setCollectionOverrides(java.util.List<CollectionOverride> collectionOverrides) {
    this.collectionOverrides = collectionOverrides;
    return this;
  }

  /**
   * Credential used when interacting with this type.
   * @return value or {@code null} for none
   */
  public Credential getCredential() {
    return credential;
  }

  /**
   * Credential used when interacting with this type.
   * @param credential credential or {@code null} for none
   */
  public ConfigurableService setCredential(Credential credential) {
    this.credential = credential;
    return this;
  }

  /**
   * Descriptor Url for the this type.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescriptorUrl() {
    return descriptorUrl;
  }

  /**
   * Descriptor Url for the this type.
   * @param descriptorUrl descriptorUrl or {@code null} for none
   */
  public ConfigurableService setDescriptorUrl(java.lang.String descriptorUrl) {
    this.descriptorUrl = descriptorUrl;
    return this;
  }

  /**
   * Options to apply when handling any resources in this service.
   * @return value or {@code null} for none
   */
  public Options getOptions() {
    return options;
  }

  /**
   * Options to apply when handling any resources in this service.
   * @param options options or {@code null} for none
   */
  public ConfigurableService setOptions(Options options) {
    this.options = options;
    return this;
  }

  @Override
  public ConfigurableService set(String fieldName, Object value) {
    return (ConfigurableService) super.set(fieldName, value);
  }

  @Override
  public ConfigurableService clone() {
    return (ConfigurableService) super.clone();
  }

}
